from math import sqrt, pi
from typing import Callable
from os import environ

def oracle(x : quant , y : quant):
    """f(x) = 1 if x == 3 else 0

    U|x⟩|y⟩ = |x⟩|f(x) ⊕ y⟩
    """
    with control(x, on_state=3):
        X(y)

def grover(size : int, oracle : Callable, outcomes : int = 1) -> int:
    """Grover's search algorithm"""

    s = quant(size)
    aux = X(quant())

    H(s)
    H(aux)

    steps = int((pi/4)*sqrt(2**size/outcomes))
    for _ in range(steps):
        oracle(s, aux)
        with around([H, X], s):
            with control(s[1:]):
                Z(s[0])

    return measure(s).value
    
if __name__ == '__main__':
    size = 12
    print(size+1, 'Qubits used')

    result = grover(size, oracle)
    print('Exprexted result = 3, measured:', result)

