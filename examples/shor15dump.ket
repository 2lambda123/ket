from math import pi, gcd
from ket import plugins
from ket import lib

reg1 = quant(4)

h(reg1)

reg2 = plugins.pown(7, reg1, 15)

after_pown = dump(reg1|reg2)

lib.qft(reg1)

result = dump(reg1.inverted())

print('|x⟩|aˣ mod 15⟩:')
print('==============')
print(after_pown.show('i4'))

print('Result:')
print('=======')
print(result.show())

r = result.get_states()[0]
for i in result.get_states():
    r = gcd(r, i)

r = 2**4/r

print('measurements =', result.get_states())
print('r =', r)
p = gcd(int(7**(r/2))+1, 15)
q = gcd(int(7**(r/2))-1, 15)
print(15, '=', p , "x", q)
