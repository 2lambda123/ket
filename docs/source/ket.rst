Ket quantum programming language
================================

This documentation aims to present the Ket quantum programming embedded in
Python. Previous knowledge of Python and quantum computation is required.

The ``quant`` type
------------------

The type ``quant`` hols an array of qubits and that is initialized with the
function ``qalloc`` or ``qalloc_dirty``.  To reference a single qubit of a
quant use brackets.

.. code-block:: python

    a = qalloc(3)       # a = |000>
    b = qalloc_dirty(2) # b = 2 qubits quant in a random state
    c = a[0]            # c = reference to the first qubit of a
    d = b[1]            # d = reference to the last qubit of a

Quantum Gates
-------------

The available quantum gate are:

+--------------+--------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Gate name    | Function                       | Matrix representation                                                                                                                                             |
+==============+================================+===================================================================================================================================================================+
| Pauli X      | ``x(q)``                       | :math:`\begin{bmatrix} 0 & 1 \\ 1 & 0 \end{bmatrix}`                                                                                                              |
+--------------+--------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Pauli Y      | ``y(q)``                       | :math:`\begin{bmatrix} 0 & -i \\ i & 0 \end{bmatrix}`                                                                                                             |
+--------------+--------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Pauli Z      | ``z(q)``                       | :math:`\begin{bmatrix} 1 & 0 \\ 0 & -1 \end{bmatrix}`                                                                                                             |
+--------------+--------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Hadamard     | ``h(q)``                       | :math:`\frac{1}{\sqrt{2}}\begin{bmatrix} 1 & 1 \\ 1 & -1 \end{bmatrix}`                                                                                           |
+--------------+--------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Phase        | ``s(q)``                       | :math:`\begin{bmatrix} 1 & 0 \\ 0 & i \end{bmatrix}`                                                                                                              |
+--------------+--------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Phase dagger | ``sd(q)``                      | :math:`\begin{bmatrix} 1 & 0 \\ 0 & -i \end{bmatrix}`                                                                                                             |
+--------------+--------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| T            | ``t(q)``                       | :math:`\begin{bmatrix} 1 & 0 \\ 0 & e^{i\pi/4} \end{bmatrix}`                                                                                                     |
+--------------+--------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| T dagger     | ``td(q)``                      | :math:`\begin{bmatrix} 1 & 0 \\ 0 & (e^{i\pi/4})^\dagger \end{bmatrix}`                                                                                           |
+--------------+--------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| U1           | ``u1(_lambda, q)``             | :math:`\begin{bmatrix} 1 & 0 \\ 0 & e^{i\lambda} \end{bmatrix}`                                                                                                   |
+--------------+--------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| U2           | ``u2(phi, _lambda, q)``        | :math:`\frac{1}{\sqrt{2}} \begin{bmatrix} 1 & -e^{i\lambda} \\ e^{i\phi} & e^{i(\lambda+\phi)} \end{bmatrix}`                                                     |
+--------------+--------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| U3           | ``u3(theta, phi, _lambda, q)`` | :math:`\begin{bmatrix} \cos{\theta\over2} & -e^{i\lambda}\sin{\theta\over2} \\ e^{i\phi}\sin{\theta\over2} & e^{i(\lambda+\phi)}\cos{\theta\over2} \end{bmatrix}` |
+--------------+--------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------+



